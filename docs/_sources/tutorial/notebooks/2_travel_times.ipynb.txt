{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. Compute travel times\n",
    "\n",
    "This notebook computes the travel times from all the points of a three-dimensional grid to each seismic station. These travel times are necessary for time-shifting the seismic traces when evaluating the beamformed network response at every location of the grid.\n",
    "\n",
    "This tutorial utilizes the `pykonal` package to compute travel times given a velocity model. The package documentation and installation procedure are described in the [pykonal package documentation](https://github.com/malcolmw/pykonal). Please acknowledge [White et al. (2020)](https://pubs.geoscienceworld.org/ssa/srl/article-abstract/91/4/2378/586804/PyKonal-A-Python-Package-for-Solving-the-Eikonal?redirectedFrom=fulltext) if using `pykonal`.\n",
    "\n",
    "> **Note:** although `pykonal` handles computing the travel times in a three-dimensional velocity model, the example below uses a one-dimensional velocity model.\n",
    "\n",
    "## Contents\n",
    "\n",
    "* [Read velocity model](#read-velocity-model)\n",
    "\n",
    "* [Interpolate velocity model at depth](#interpolate-velocity-model-at-depth)\n",
    "* [Expand model laterally](#expand-model-laterally)\n",
    "* [Get station coordinates](#station-coordinates)\n",
    "* [Show model and stations](#show-model-and-stations)\n",
    "* [Compute travel times](#compute-travel-times)\n",
    "* [Save travel times](#save-travel-times)\n",
    "* [Show travel times at a given station](#show-travel-times-at-a-given-station)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import h5py as h5\n",
    "import numpy as np\n",
    "import os\n",
    "import pandas as pd\n",
    "import tqdm\n",
    "\n",
    "from matplotlib import pyplot as plt\n",
    "\n",
    "from obspy import read, read_inventory\n",
    "from pykonal.solver import PointSourceSolver\n",
    "from pykonal.transformations import geo2sph"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Read velocity model\n",
    "\n",
    "We wrote the velocity model of [Karabulut et al. (2011)](https://www.sciencedirect.com/science/article/pii/S0040195111002903?casa_token=wTzEUe0IdicAAAAA:fYbKmGkHHrQfyLicd0lO4Ai451jT6h_yTF6ZZXrvglpw9rXDTVVzWzIWNQ0aFAFbMJ_pU6I) in a csv file that we read with `pandas`. The model is given in meters for the depth and in m/s for the speed values. Everything is converted to km for compatibility with `pykonal`. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "FILEPATH_VELOCITY = \"../data/velocity_model_Karabulut2011.csv\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>depth</th>\n",
       "      <th>-2.0</th>\n",
       "      <th>0.0</th>\n",
       "      <th>1.0</th>\n",
       "      <th>2.0</th>\n",
       "      <th>3.0</th>\n",
       "      <th>4.0</th>\n",
       "      <th>5.0</th>\n",
       "      <th>6.0</th>\n",
       "      <th>8.0</th>\n",
       "      <th>10.0</th>\n",
       "      <th>12.0</th>\n",
       "      <th>14.0</th>\n",
       "      <th>15.0</th>\n",
       "      <th>20.0</th>\n",
       "      <th>22.0</th>\n",
       "      <th>25.0</th>\n",
       "      <th>32.0</th>\n",
       "      <th>77.0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>P</th>\n",
       "      <td>2.90</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.60</td>\n",
       "      <td>5.70</td>\n",
       "      <td>5.80</td>\n",
       "      <td>5.90</td>\n",
       "      <td>5.95</td>\n",
       "      <td>6.05</td>\n",
       "      <td>6.10</td>\n",
       "      <td>6.15</td>\n",
       "      <td>6.20</td>\n",
       "      <td>6.25</td>\n",
       "      <td>6.30</td>\n",
       "      <td>6.40</td>\n",
       "      <td>6.50</td>\n",
       "      <td>6.70</td>\n",
       "      <td>8.00</td>\n",
       "      <td>8.045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>S</th>\n",
       "      <td>1.67</td>\n",
       "      <td>1.9</td>\n",
       "      <td>3.15</td>\n",
       "      <td>3.21</td>\n",
       "      <td>3.26</td>\n",
       "      <td>3.41</td>\n",
       "      <td>3.42</td>\n",
       "      <td>3.44</td>\n",
       "      <td>3.48</td>\n",
       "      <td>3.56</td>\n",
       "      <td>3.59</td>\n",
       "      <td>3.61</td>\n",
       "      <td>3.63</td>\n",
       "      <td>3.66</td>\n",
       "      <td>3.78</td>\n",
       "      <td>3.85</td>\n",
       "      <td>4.65</td>\n",
       "      <td>4.650</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "depth  -2.0    0.0    1.0    2.0    3.0    4.0    5.0    6.0    8.0    10.0  \\\n",
       "P       2.90    3.0   5.60   5.70   5.80   5.90   5.95   6.05   6.10   6.15   \n",
       "S       1.67    1.9   3.15   3.21   3.26   3.41   3.42   3.44   3.48   3.56   \n",
       "\n",
       "depth   12.0   14.0   15.0   20.0   22.0   25.0   32.0   77.0  \n",
       "P       6.20   6.25   6.30   6.40   6.50   6.70   8.00  8.045  \n",
       "S       3.59   3.61   3.63   3.66   3.78   3.85   4.65  4.650  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read velocity model\n",
    "velocity_layers = pd.read_csv(\n",
    "    FILEPATH_VELOCITY, \n",
    "    usecols=[1, 2, 4],\n",
    "    names=[\"depth\", \"P\", \"S\"],\n",
    "    skiprows=1,\n",
    "    index_col=\"depth\",\n",
    "    )\n",
    "\n",
    "# Convert meters to kilometers\n",
    "velocity_layers *= 1e-3\n",
    "velocity_layers.index *= 1e-3\n",
    "\n",
    "# Show table\n",
    "velocity_layers.T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = velocity_layers.plot(\n",
    "    drawstyle=\"steps-post\",\n",
    "    ylabel=\"Wave Velocity (km/s)\",\n",
    "    xlabel=\"Depth (km)\",\n",
    "    title=\"1D velocity model from Karabulut et al. 2011\",\n",
    "    grid=True,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Interpolate velocity model at depth\n",
    "\n",
    "We compute the travel times on a finer grid than the model grid, so we need to interpolate the model. We define 30 depths between 30 km and -2 km."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "depths = np.linspace(30.0, -2.0, 32)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Then we interpolate the velocity at the given depths using `pandas.DataFrame` method `reindex`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "velocity_layers_interp = velocity_layers.reindex(depths, method=\"ffill\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can then compare the natural (layered) and interpolated models as a function of depth"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "velocity_layers.plot(drawstyle=\"steps-post\")\n",
    "velocity_layers_interp.sort_values(\"depth\").plot(\n",
    "    drawstyle=\"steps-post\",\n",
    "    xlabel=\"Depth (km)\",\n",
    "    ylabel=\"Speed (km/s)\",\n",
    "    title=\"1D velocity model from Karabulut et al. 2011\",\n",
    "    ax=plt.gca(),\n",
    "    grid=True,\n",
    "    figsize=(12, 8),\n",
    "    marker=\"s\",\n",
    "    ls=\"\"\n",
    ")\n",
    "\n",
    "# Labels and legends\n",
    "plt.axvspan(depths.min(), depths.max(), alpha=0.2)\n",
    "plt.legend([\"P\", \"S\", \"P interpolated\", \"S interpolated\", \"Domain\"])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Expand model laterally\n",
    "\n",
    "Because `pykonal` uses three-dimensional coordinate systems, we need to cast the one-dimensional velocity model onto a three-dimensional grid. The following define the grid in the longitude and latitude dimensions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>P</th>\n",
       "      <th>S</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>depth</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>30.000000</th>\n",
       "      <td>6.70</td>\n",
       "      <td>3.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28.967742</th>\n",
       "      <td>6.70</td>\n",
       "      <td>3.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27.935484</th>\n",
       "      <td>6.70</td>\n",
       "      <td>3.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26.903226</th>\n",
       "      <td>6.70</td>\n",
       "      <td>3.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25.870968</th>\n",
       "      <td>6.70</td>\n",
       "      <td>3.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24.838710</th>\n",
       "      <td>6.50</td>\n",
       "      <td>3.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23.806452</th>\n",
       "      <td>6.50</td>\n",
       "      <td>3.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22.774194</th>\n",
       "      <td>6.50</td>\n",
       "      <td>3.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21.741935</th>\n",
       "      <td>6.40</td>\n",
       "      <td>3.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20.709677</th>\n",
       "      <td>6.40</td>\n",
       "      <td>3.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19.677419</th>\n",
       "      <td>6.30</td>\n",
       "      <td>3.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18.645161</th>\n",
       "      <td>6.30</td>\n",
       "      <td>3.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17.612903</th>\n",
       "      <td>6.30</td>\n",
       "      <td>3.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16.580645</th>\n",
       "      <td>6.30</td>\n",
       "      <td>3.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15.548387</th>\n",
       "      <td>6.30</td>\n",
       "      <td>3.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14.516129</th>\n",
       "      <td>6.25</td>\n",
       "      <td>3.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13.483871</th>\n",
       "      <td>6.20</td>\n",
       "      <td>3.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12.451613</th>\n",
       "      <td>6.20</td>\n",
       "      <td>3.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11.419355</th>\n",
       "      <td>6.15</td>\n",
       "      <td>3.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10.387097</th>\n",
       "      <td>6.15</td>\n",
       "      <td>3.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9.354839</th>\n",
       "      <td>6.10</td>\n",
       "      <td>3.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8.322581</th>\n",
       "      <td>6.10</td>\n",
       "      <td>3.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7.290323</th>\n",
       "      <td>6.05</td>\n",
       "      <td>3.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6.258065</th>\n",
       "      <td>6.05</td>\n",
       "      <td>3.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5.225806</th>\n",
       "      <td>5.95</td>\n",
       "      <td>3.42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4.193548</th>\n",
       "      <td>5.90</td>\n",
       "      <td>3.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3.161290</th>\n",
       "      <td>5.80</td>\n",
       "      <td>3.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2.129032</th>\n",
       "      <td>5.70</td>\n",
       "      <td>3.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1.096774</th>\n",
       "      <td>5.60</td>\n",
       "      <td>3.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.064516</th>\n",
       "      <td>3.00</td>\n",
       "      <td>1.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>-0.967742</th>\n",
       "      <td>2.90</td>\n",
       "      <td>1.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>-2.000000</th>\n",
       "      <td>2.90</td>\n",
       "      <td>1.67</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               P     S\n",
       "depth                 \n",
       " 30.000000  6.70  3.85\n",
       " 28.967742  6.70  3.85\n",
       " 27.935484  6.70  3.85\n",
       " 26.903226  6.70  3.85\n",
       " 25.870968  6.70  3.85\n",
       " 24.838710  6.50  3.78\n",
       " 23.806452  6.50  3.78\n",
       " 22.774194  6.50  3.78\n",
       " 21.741935  6.40  3.66\n",
       " 20.709677  6.40  3.66\n",
       " 19.677419  6.30  3.63\n",
       " 18.645161  6.30  3.63\n",
       " 17.612903  6.30  3.63\n",
       " 16.580645  6.30  3.63\n",
       " 15.548387  6.30  3.63\n",
       " 14.516129  6.25  3.61\n",
       " 13.483871  6.20  3.59\n",
       " 12.451613  6.20  3.59\n",
       " 11.419355  6.15  3.56\n",
       " 10.387097  6.15  3.56\n",
       " 9.354839   6.10  3.48\n",
       " 8.322581   6.10  3.48\n",
       " 7.290323   6.05  3.44\n",
       " 6.258065   6.05  3.44\n",
       " 5.225806   5.95  3.42\n",
       " 4.193548   5.90  3.41\n",
       " 3.161290   5.80  3.26\n",
       " 2.129032   5.70  3.21\n",
       " 1.096774   5.60  3.15\n",
       " 0.064516   3.00  1.90\n",
       "-0.967742   2.90  1.67\n",
       "-2.000000   2.90  1.67"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "velocity_layers_interp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "longitudes = np.linspace(30.20, 30.45, 25)\n",
    "# sample latitudes in decreasing order to get corresponding colatitudes in increasing order (see explanation further)\n",
    "latitudes = np.linspace(40.76, 40.60, 16)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We then expand the velocity vector in the longitude and latitude dimensions with `xarray`. This operation is automatically done with the `expand_dim()` method."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "velocity_P = np.zeros((len(depths), len(latitudes), len(longitudes)), dtype=np.float32)\n",
    "velocity_S = np.zeros((len(depths), len(latitudes), len(longitudes)), dtype=np.float32)\n",
    "# use numpy's broadcasting rules\n",
    "velocity_P[...] = velocity_layers_interp[\"P\"].values[:, None, None]\n",
    "velocity_S[...] = velocity_layers_interp[\"S\"].values[:, None, None]\n",
    "# store the P- and S-wave velocity models in a dictionary\n",
    "velocity_model = {\n",
    "    \"P\": velocity_P,\n",
    "    \"S\": velocity_S\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Station coordinates\n",
    "\n",
    "We extract the station coordinates from the XML files."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>longitude</th>\n",
       "      <th>latitude</th>\n",
       "      <th>elevation</th>\n",
       "      <th>depth</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>code</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>DC06</th>\n",
       "      <td>30.265751</td>\n",
       "      <td>40.616718</td>\n",
       "      <td>555.0</td>\n",
       "      <td>-0.555</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DC07</th>\n",
       "      <td>30.242170</td>\n",
       "      <td>40.667080</td>\n",
       "      <td>164.0</td>\n",
       "      <td>-0.164</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DC08</th>\n",
       "      <td>30.250130</td>\n",
       "      <td>40.744438</td>\n",
       "      <td>162.0</td>\n",
       "      <td>-0.162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DD06</th>\n",
       "      <td>30.317770</td>\n",
       "      <td>40.623539</td>\n",
       "      <td>182.0</td>\n",
       "      <td>-0.182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DE07</th>\n",
       "      <td>30.411539</td>\n",
       "      <td>40.679661</td>\n",
       "      <td>40.0</td>\n",
       "      <td>-0.040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DE08</th>\n",
       "      <td>30.406469</td>\n",
       "      <td>40.748562</td>\n",
       "      <td>31.0</td>\n",
       "      <td>-0.031</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SAUV</th>\n",
       "      <td>30.327200</td>\n",
       "      <td>40.740200</td>\n",
       "      <td>170.0</td>\n",
       "      <td>-0.170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SPNC</th>\n",
       "      <td>30.308300</td>\n",
       "      <td>40.686001</td>\n",
       "      <td>190.0</td>\n",
       "      <td>-0.190</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      longitude   latitude  elevation  depth\n",
       "code                                        \n",
       "DC06  30.265751  40.616718      555.0 -0.555\n",
       "DC07  30.242170  40.667080      164.0 -0.164\n",
       "DC08  30.250130  40.744438      162.0 -0.162\n",
       "DD06  30.317770  40.623539      182.0 -0.182\n",
       "DE07  30.411539  40.679661       40.0 -0.040\n",
       "DE08  30.406469  40.748562       31.0 -0.031\n",
       "SAUV  30.327200  40.740200      170.0 -0.170\n",
       "SPNC  30.308300  40.686001      190.0 -0.190"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get inventories\n",
    "inventory = read_inventory(\"../data/processed/*xml\")\n",
    "\n",
    "# Extract stations\n",
    "stations = [sta for net in inventory for sta in net]\n",
    "attrs = \"longitude\", \"latitude\", \"elevation\", \"code\"\n",
    "stations = [{item: getattr(sta, item) for item in attrs} for sta in stations]\n",
    "\n",
    "# Turn into dataframe\n",
    "network = pd.DataFrame(stations).set_index(\"code\")\n",
    "network[\"depth\"] = -1e-3 * network.elevation \n",
    "\n",
    "# Save network metadata\n",
    "network.to_csv(\"../data/network.csv\")\n",
    "\n",
    "# Show\n",
    "network\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Show model and stations\n",
    "\n",
    "This cell selects a slice of the velocity model with the `DataArray.sel()` and plots it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Select slice at first latitude index\n",
    "phase = \"S\"\n",
    "velocities_slice = velocity_model[phase][:, 0, :]\n",
    "\n",
    "# Show velocities\n",
    "fig = plt.figure(figsize=(12, 8))\n",
    "img = plt.pcolormesh(longitudes, depths, velocities_slice, cmap=\"RdBu\")\n",
    "cb = plt.colorbar(img)\n",
    "\n",
    "# Show stations\n",
    "plt.plot(network.longitude, network.depth, \"wv\")\n",
    "\n",
    "# Labels\n",
    "ax = plt.gca()\n",
    "ax.set_xlabel(\"Longitude (degrees)\")\n",
    "ax.set_ylabel(\"Depth (km)\")\n",
    "ax.set_title(\"Velocity model slice from 3D grid\")\n",
    "cb.set_label(f\"{phase} velocity (km/s)\")\n",
    "ax.invert_yaxis()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Compute travel times\n",
    "\n",
    "The travel times are computed for every station with the Eikonal solver of `pykonal`. The travel times are then saved into a `h5` file for later use. \n",
    "\n",
    "**Warning**: For `pykonal`, we need to give the velocity grid in spherical coordinates $(r, \\theta, \\varphi)$, which is why we built the grid with decreasing depths and latitudes.\n",
    "\n",
    "Spherical coordinates:\n",
    "- $r$: Distance from center or Earth in km (= decreasing depth).\n",
    "- $\\theta$: Polar angle in radians (= co-latitude or, equivalently, decreasing latitude).\n",
    "- $\\varphi$: Azimuthal angle in radians (= longitude)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Travel times P:   0%|          | 0/8 [00:00<?, ?it/s]"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Travel times P: 100%|██████████| 8/8 [00:03<00:00,  2.01it/s]\n",
      "Travel times S: 100%|██████████| 8/8 [00:03<00:00,  2.08it/s]\n"
     ]
    }
   ],
   "source": [
    "STATION_ENTRIES = [\"latitude\", \"longitude\", \"depth\"]\n",
    "\n",
    "# Initialize travel times\n",
    "travel_times = {}\n",
    "\n",
    "# Reference point\n",
    "reference_point = geo2sph((latitudes.max(), longitudes.min(), depths.max()))\n",
    "node_intervals = (\n",
    "    np.abs(depths[1] - depths[0]),\n",
    "    np.deg2rad(np.abs(latitudes[1] - latitudes[0])),\n",
    "    np.deg2rad(longitudes[1] - longitudes[0]),\n",
    ")\n",
    "\n",
    "# Loop over stations and phases\n",
    "for phase in velocity_model:\n",
    "    travel_times[phase] = {}\n",
    "    for station in tqdm.tqdm(network.index, desc=f\"Travel times {phase}\"):\n",
    "\n",
    "        # Initialize Eikonal solver\n",
    "        solver = PointSourceSolver(coord_sys=\"spherical\")\n",
    "        solver.velocity.min_coords = reference_point\n",
    "        solver.velocity.node_intervals = node_intervals\n",
    "        velocity = velocity_model[phase]\n",
    "        solver.velocity.npts = velocity.shape\n",
    "        solver.velocity.values = velocity.copy()\n",
    "        \n",
    "        # Source\n",
    "        src_loc = network.loc[station][STATION_ENTRIES].values\n",
    "        solver.src_loc = np.array(geo2sph(src_loc).squeeze())\n",
    "\n",
    "        # Solve Eikonal equation\n",
    "        solver.solve()\n",
    "\n",
    "        # Update the travel_times dictionary\n",
    "        tt = solver.tt.values\n",
    "        # pykonal might produce a singularity at origin\n",
    "        tt[np.isinf(tt)] = 0\n",
    "        travel_times[phase][station] = tt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Save travel times and grid coordinates\n",
    "\n",
    "Save the travel times as a hdf5 file. This format preserves a self-explanatory data structure and supports compression."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# build 3D gridded coordinates from depths, latitudes and longitudes vectors\n",
    "# these are the coordinates of the points in the travel time grid\n",
    "depths_g, latitudes_g, longitudes_g = np.meshgrid(\n",
    "    depths, latitudes, longitudes, indexing=\"ij\"\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "with h5.File(\"../data/travel_times.h5\", mode=\"w\") as ftt:\n",
    "    ftt.create_group(\"source_coordinates\")\n",
    "    ftt[\"source_coordinates\"].create_dataset(\"depth\", data=depths_g)\n",
    "    ftt[\"source_coordinates\"].create_dataset(\"latitude\", data=latitudes_g)\n",
    "    ftt[\"source_coordinates\"].create_dataset(\"longitude\", data=longitudes_g)\n",
    "    for phase in [\"P\", \"S\"]:\n",
    "        ftt.create_group(phase)\n",
    "        for sta in travel_times[phase]:\n",
    "            ftt[phase].create_dataset(sta, data=travel_times[phase][sta])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Show travel times at a given station"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "CONTOUR_LEVELS = 20\n",
    "SEISMIC_PHASE = \"S\"\n",
    "station = network.loc[\"DC06\"]\n",
    "\n",
    "# Show\n",
    "latitude_id = np.abs(latitudes - station.latitude).argmin()\n",
    "time_delays = travel_times[SEISMIC_PHASE][station.name]\n",
    "time_delays = time_delays[:, latitude_id, :]\n",
    "fig = plt.figure(figsize=(12, 8))\n",
    "img = plt.contourf(longitudes, depths, time_delays, cmap=\"RdPu\", levels=CONTOUR_LEVELS)\n",
    "\n",
    "# Colorbar\n",
    "cb = plt.colorbar(img)\n",
    "cb.set_label(f\"Travel times {SEISMIC_PHASE} (seconds)\")\n",
    "\n",
    "# Station\n",
    "plt.plot(station.longitude, station.depth, \"k.\")\n",
    "\n",
    "# Labels\n",
    "ax = plt.gca()\n",
    "ax.invert_yaxis()\n",
    "ax.set_xlabel(\"Longitude (degrees)\")\n",
    "ax.set_ylabel(\"Depth (km)\")\n",
    "ax.set_title(f\"Travel times from the seismic station {station.name}\")\n",
    "plt.show()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.10.5 ('py310')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.4"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "312801dd0aa5461639464a6df6a6c417c90a144a1d808d7cfd3dc2851df10201"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
